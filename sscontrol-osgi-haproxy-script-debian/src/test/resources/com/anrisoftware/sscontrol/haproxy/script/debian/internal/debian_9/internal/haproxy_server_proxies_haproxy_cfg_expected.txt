global
    # Log to systemd's /dev/log compatibility socket
    log /dev/log local0 notice

    chroot /var/lib/haproxy
    pidfile /var/run/haproxy.pid
    maxconn 4000
    user haproxy
    group haproxy
    daemon

    # turn on stats unix socket - see http://cbonte.github.io/haproxy-dconv/1.8/configuration.html#3.1-stats%20socket
    stats socket /var/lib/haproxy/stats mode 600 level admin
    stats timeout 2m

    # From https://mozilla.github.io/server-side-tls/ssl-config-generator/
    # Intermediate config as of Jan 2018 - update it from the link above!
    tune.ssl.default-dh-param 2048
    ssl-default-bind-ciphers ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA$
    ssl-default-bind-options no-sslv3 no-tls-tickets
    ssl-default-server-ciphers ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-S$
    ssl-default-server-options no-sslv3 no-tls-tickets

defaults
    mode http

    # See http://cbonte.github.io/haproxy-dconv/1.8/configuration.html#option%20http-server-close
    option http-server-close

    log global
    option httplog
    option dontlognull
    option http-server-close
    option redispatch
    retries 3
    timeout http-request 10s
    timeout queue 1m
    timeout client 1m
    timeout server 1m

    timeout check 10s 
    maxconn 3000

    # From http://stackoverflow.com/questions/21419859/configuring-haproxy-to-work-with-server-sent-events
    # Set the max time to wait for a connection attempt to a server to succeed  
    timeout connect 30s
    # handle a client suddenly disappearing from the net
    timeout client-fin 30s
    option http-server-close

    errorfile 400 /etc/haproxy/errors/400.http
    errorfile 403 /etc/haproxy/errors/403.http
    errorfile 408 /etc/haproxy/errors/408.http
    errorfile 500 /etc/haproxy/errors/500.http
    errorfile 502 /etc/haproxy/errors/502.http
    errorfile 503 /etc/haproxy/errors/503.http
    errorfile 504 /etc/haproxy/errors/504.http

frontend http-in
    bind            *:80 name node-http
    mode            http
    redirect scheme https code 301 unless { path_beg /.well-known/acme-challenge/ }
    default_backend nodes-http
backend nodes-http
    mode            http
    balance         roundrobin
    option          forwardfor
    http-request    set-header X-Forwarded-Port %[dst_port]
    http-request    add-header X-Forwarded-Proto https if { ssl_fc }
    option          httpchk HEAD / HTTP/1.1\r\nHost:\ 192.168.56.200:30000
    http-check      expect rstatus ((2|3)[0-9][0-9]|404)
    server          ingress01-http 192.168.56.200:30000 check inter 1000 send-proxy
frontend https-in
    bind            192.168.56.200:443 name andrea-node-1
    mode            tcp
    option          tcplog
    tcp-request     inspect-delay 5s
    tcp-request     content accept if { req.ssl_hello_type 1 }
    acl proto_tls   req.ssl_hello_type 1
    use_backend     nodes-https if proto_tls
    default_backend nodes-https
backend nodes-https
    mode            tcp
    log             global
    stick-table     type ip size 512k expire 30m
    stick on        dst
    balance         roundrobin
    server          ingress01-https 192.168.56.200:30001 check inter 1000 send-proxy
frontend ssh-in
    bind            192.168.56.200:22 name andrea-node-1
    mode            tcp
    default_backend nodes-ssh
backend nodes-ssh
    mode            tcp
    log             global
    stick-table     type ip size 512k expire 30m
    stick on        dst
    balance         roundrobin
    retries         3
    option          tcplog
    server          ingress01-ssh 192.168.56.200:30022 check inter 1000
