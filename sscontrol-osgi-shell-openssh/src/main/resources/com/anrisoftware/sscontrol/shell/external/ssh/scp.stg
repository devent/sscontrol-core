scpCmd(args) ::= <<
<sshChdir(args.chdir)>
<sshEnv(args.env)>
<checkFile(args)>
<scpCommand(args)>
>>

checkFile(args) ::= <<
<if(args.remoteDest)>
ssh <sshArgs(args)> <sshDebug(args)> <sshOptions(args, args.sshDefaultOptions)> <sshOptions(args, args.sshOptions)> <if(args.sshKey)><sshKeyOption(args)><endif> <args.shell> \<\< \eof1
<if(!args.override)>
if <if(args.privileged)>sudo <endif>find "<args.destOriginal>" -type f >/dev/null; then
    FILE_EXISTS=1
else
    FILE_EXISTS=0
fi
eof1
if $FILE_EXISTS; then
    exit 0;
fi
<endif>
<endif>
>>

scpCommand(args) ::= <%
scp
<\ ><scpRecursive(args)>
<\ ><sshArgs(args)>
<\ ><sshDebug(args)>
<\ ><scpPort(args)>
<\ ><sshOptions(args, args.sshDefaultOptions)>
<\ ><sshOptions(args, args.sshOptions)>
<\ ><if(args.sshKey)><sshKeyOption(args)><endif>
<\ ><if(args.remoteSrc)><scpRemote(args, args.src)><else><args.src><endif>
<\ ><if(args.remoteDest)><scpRemote(args, args.dest)><else><args.dest><endif>
%>

scpRemote(args, path) ::= <%
<args.sshUser>@<args.sshHost>:<path>
%>

scpPort(args) ::= <%
    
%>

scpRecursive(args) ::= <%
<if(args.recursive)>-r<endif>
%>
